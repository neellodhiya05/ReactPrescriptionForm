[{"D:\\ReactPrescriptionForm\\src\\index.js":"1","D:\\ReactPrescriptionForm\\src\\App.js":"2","D:\\ReactPrescriptionForm\\src\\reportWebVitals.js":"3","D:\\ReactPrescriptionForm\\src\\component\\Header.js":"4","D:\\ReactPrescriptionForm\\src\\component\\Lens.js":"5","D:\\ReactPrescriptionForm\\src\\component\\DateOfPre.js":"6","D:\\ReactPrescriptionForm\\src\\component\\ExtraInfo.js":"7","D:\\ReactPrescriptionForm\\src\\component\\CheckBoxAndBtn.js":"8","D:\\ReactPrescriptionForm\\src\\component\\PupilPre.js":"9","D:\\ReactPrescriptionForm\\src\\component\\NearAddSelect.js":"10","D:\\ReactPrescriptionForm\\src\\component\\Select.js":"11","D:\\ReactPrescriptionForm\\src\\component\\PupilSelect.js":"12","D:\\ReactPrescriptionForm\\src\\component\\Simple.js":"13","D:\\ReactPrescriptionForm\\src\\component\\Advanced.js":"14","D:\\ReactPrescriptionForm\\src\\Menu.js":"15"},{"size":612,"mtime":1621488871919,"results":"16","hashOfConfig":"17"},{"size":814,"mtime":1621493543565,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1621061981035,"results":"19","hashOfConfig":"17"},{"size":1605,"mtime":1621487393792,"results":"20","hashOfConfig":"17"},{"size":3204,"mtime":1621080454559,"results":"21","hashOfConfig":"17"},{"size":1294,"mtime":1621233150009,"results":"22","hashOfConfig":"17"},{"size":969,"mtime":1621080427156,"results":"23","hashOfConfig":"17"},{"size":1111,"mtime":1621080407710,"results":"24","hashOfConfig":"17"},{"size":1299,"mtime":1621231274077,"results":"25","hashOfConfig":"17"},{"size":1483,"mtime":1621254542799,"results":"26","hashOfConfig":"17"},{"size":2897,"mtime":1621254319905,"results":"27","hashOfConfig":"17"},{"size":1744,"mtime":1621254635526,"results":"28","hashOfConfig":"17"},{"size":415,"mtime":1621490388454,"results":"29","hashOfConfig":"17"},{"size":405,"mtime":1621489269056,"results":"30","hashOfConfig":"17"},{"size":419,"mtime":1621493315587,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ekbybh",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ReactPrescriptionForm\\src\\index.js",[],"D:\\ReactPrescriptionForm\\src\\App.js",[],"D:\\ReactPrescriptionForm\\src\\reportWebVitals.js",[],["68","69"],"D:\\ReactPrescriptionForm\\src\\component\\Header.js",[],"D:\\ReactPrescriptionForm\\src\\component\\Lens.js",["70"],"import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { NearAddSelect } from \"./NearAddSelect\";\r\nimport { Select } from \"./Select\";\r\n\r\nexport class Lens extends Component {\r\n       render() {\r\n              return (\r\n                     <div>\r\n\r\n                            <Row style={{ fontFamily: \"Arial Black\" }}>\r\n\r\n                                   <Col>Right Eye</Col>\r\n                                   <Col></Col>\r\n                                   <Col>Left Eye</Col>\r\n\r\n                            </Row>\r\n                            <hr></hr>\r\n                            <Row style={{ fontSize: \" calc(1em + 1vw)\" }}>\r\n\r\n\r\n                                   <Col >Sphere(SPH)</Col>\r\n                                   <Col></Col>\r\n                                   <Col >Sphere(SPH)</Col>\r\n\r\n                            </Row>\r\n                            <Row>\r\n\r\n                                   <Col ><Select /> </Col>\r\n                                   <Col></Col>\r\n                                   <Col><Select /></Col>\r\n\r\n                            </Row>\r\n                            <hr></hr>\r\n                            <Row style={{ fontSize: \" calc(1em + 1vw)\" }}>\r\n\r\n                                   <Col >Cylinder(CYL)</Col>\r\n                                   <Col></Col>\r\n                                   <Col>Cylinder(CYL)</Col>\r\n\r\n                            </Row>\r\n                            <Row>\r\n\r\n                                   <Col ><Select /> </Col>\r\n                                   <Col></Col>\r\n                                   <Col><Select /></Col>\r\n\r\n                            </Row>\r\n                            <hr></hr>\r\n                            <Row style={{ fontSize: \" calc(1em + 1vw)\" }}>\r\n\r\n                                   <Col >Axis</Col>\r\n                                   <Col></Col>\r\n                                   <Col>Axis</Col>\r\n\r\n                            </Row>\r\n                            <Row>\r\n\r\n                                   <Col ><input type=\"number\" /></Col>\r\n                                   <Col></Col>\r\n                                   <Col><input type=\"number\" /></Col>\r\n\r\n                            </Row>\r\n                            <hr></hr>\r\n                            <Row style={{ fontSize: \" calc(1em + 1vw)\" }}>\r\n\r\n                                   <Col >Near Addition(ADD)</Col>\r\n                                   <Col></Col>\r\n                                   <Col>Near Addition(ADD)</Col>\r\n\r\n                            </Row>\r\n                            <Row>\r\n\r\n                                   <Col ><NearAddSelect /> </Col>\r\n                                   <Col></Col>\r\n                                   <Col><NearAddSelect /> </Col>\r\n\r\n                            </Row>\r\n                            <hr></hr>\r\n                            <p >For prescriptions with a Sphere value stronger than +/- 8, we may still be able to supply your glasses. Please call us on 01793 746601 to discuss your options.</p>\r\n                            <hr></hr>\r\n                     </div>\r\n              )\r\n       }\r\n}","D:\\ReactPrescriptionForm\\src\\component\\DateOfPre.js",[],"D:\\ReactPrescriptionForm\\src\\component\\ExtraInfo.js",[],"D:\\ReactPrescriptionForm\\src\\component\\CheckBoxAndBtn.js",["71"],"import React, { Component } from \"react\";\r\n\r\nexport class CheckBoxAndBtn extends Component {\r\n    render() {\r\n        const mystyle = {\r\n            color: \"white\",\r\n            padding: \"10px\",\r\n            fontFamily: \"Arial Black\",\r\n            textAlign: \"center\",\r\n            fontSize: \"20px\"\r\n        }\r\n        return (\r\n            <div>\r\n                <input type=\"checkbox\" />\r\n                <label >\r\n                    I confirm that I've read and agree to the <a href=\"#\">Terms and Conditions</a>. I certify that the wearer is over 16 years old and that they are not registered blind or partially sighted. I also confirm that the prescription details above have been entered correctly and I am happy that no errors have been made.\r\n                </label>\r\n                <form>\r\n                    <div className=\"heading\" style={mystyle}>\r\n                        <button className=\"btn-btn sucess\" type=\"submit\">\r\n                            Add Prescription\r\n                     </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","D:\\ReactPrescriptionForm\\src\\component\\PupilPre.js",[],"D:\\ReactPrescriptionForm\\src\\component\\NearAddSelect.js",["72"],"import React, { Component } from 'react';\r\n\r\nexport class NearAddSelect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n     values: [],\r\n      colours: {},\r\n      selectValues: \"\"\r\n    };\r\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\r\n  }\r\n  handleDropdownChange(e){\r\n    this.setState({ selectValues: e.target.value });\r\n}\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n     values: [\r\n       \r\n        {id: '--', name: '--'},\r\n        {id: '+0.25', name: '+0.25'},\r\n        {id: '+0.50', name: '+0.50'},\r\n        {id: '+0.75', name: '+0.75'},\r\n        {id: '+1.00', name: '+1.00'},\r\n        {id: '+1.25', name: '+1.25'},\r\n        {id: '+1.50', name: '+1.50'},\r\n        {id: '+1.75', name: '+1.75'},\r\n        {id: '+2.00', name: '+2.00'},\r\n        {id: '+2.25', name: '+2.25'},\r\n        {id: '+2.50', name: '+2.50'},\r\n        {id: '+2.75', name: '+2.75'},\r\n        {id: '+3.00', name: '+3.00'},\r\n        \r\n      ]\r\n    });\r\n  }\r\n\r\n\r\n  render () {\r\n    const { values } = this.state;\r\n\r\n    let valuesList = values.length > 0\r\n    \t&& values.map((item, i) => {\r\n      return (\r\n        <option key={i} value={item.id}>{item.name}</option>\r\n      )\r\n    }, this);\r\n\r\n    return (\r\n      <div>\r\n        <select onChange={this.handleDropdownChange}>\r\n          {valuesList}\r\n        </select>\r\n        <div>\r\n            Selected value is : {this.state.selectValues}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","D:\\ReactPrescriptionForm\\src\\component\\Select.js",["73"],"import React, { Component } from 'react';\r\n\r\nexport class Select extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n     values: [],\r\n      colours: {},\r\n      selectValues: \"\"\r\n    };\r\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\r\n  }\r\n  handleDropdownChange(e){\r\n      this.setState({ selectValues: e.target.value });\r\n}\r\n  \r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n     values: [\r\n        {id: '+/-', name: '+/-'},\r\n        {id: '-8.00', name: '-8.00'},\r\n        {id: '-7.75', name: '-7.75'},\r\n        {id: '-7.50', name: '-7.50'},\r\n        {id: '-7.25', name: '-7.25'},\r\n        {id: '-7.00', name: '-6.00'},\r\n        {id: '-6.75', name: '-6.75'},\r\n        {id: '-6.50', name: '-6.50'},\r\n        {id: '-6.25', name: '-6.25'},\r\n        {id: '-6.00', name: '-6.00'},\r\n        {id: '-5.75', name: '-5.75'},\r\n        {id: '-5.50', name: '-5.50'},\r\n        {id: '-5.25', name: '-5.25'},\r\n        {id: '-5.00', name: '-5.00'},\r\n        {id: '-4.75', name: '-4.75'},\r\n        {id: '-4.50', name: '-4.50'},\r\n        {id: '-4.25', name: '-4.25'},\r\n        {id: '-4.00', name: '-4.00'},\r\n        {id: '-3.75', name: '-3.75'},\r\n        {id: '-3.50', name: '-3.50'},\r\n        {id: '-3.25', name: '-3.25'},\r\n        {id: '-3.00', name: '-3.00'},\r\n        {id: '-2.75', name: '-2.75'},\r\n        {id: '-2.50', name: '-2.50'},\r\n        {id: '-2.25', name: '-2.25'},\r\n        {id: '-2.00', name: '-2.00'},\r\n        {id: '-1.75', name: '-1.75'},\r\n        {id: '-1.50', name: '-1.50'},\r\n        {id: '-1.25', name: '-1.25'},\r\n        {id: '-1.00', name: '-1.00'},\r\n        {id: '-0.75', name: '-0.75'},\r\n        {id: '-0.50', name: '-0.50'},\r\n        {id: '-0.25', name: '-0.25'},\r\n        {id: '0.00', name: '0.00'},\r\n        {id: 'infinity', name: '∞'},\r\n        {id: 'plano', name: 'plano'},\r\n        {id: 'balance', name: 'balance'},\r\n        {id: '+0.25', name: '+0.25'},\r\n        {id: '+0.50', name: '+0.50'},\r\n        {id: '+0.75', name: '+0.75'},\r\n        {id: '+1.00', name: '+1.00'},\r\n        {id: '+1.25', name: '+1.25'},\r\n        {id: '+1.50', name: '+1.50'},\r\n        {id: '+1.75', name: '+1.75'},\r\n        {id: '+2.00', name: '+2.00'},\r\n        {id: '+2.25', name: '+2.25'},\r\n        {id: '+2.50', name: '+2.50'},\r\n        {id: '+2.75', name: '+2.75'},\r\n        {id: '+3.00', name: '+3.00'},\r\n      ]\r\n    });\r\n  }\r\n\r\n\r\n  render () {\r\n    const { values } = this.state;\r\n\r\n    let valuesList = values.length > 0\r\n    \t&& values.map((item, i) => {\r\n      return (\r\n        <option key={i} value={item.id}>{item.name}</option>\r\n      )\r\n    }, this);\r\n\r\n    return (\r\n      <div>\r\n        <select onChange={this.handleDropdownChange}>\r\n          {valuesList}\r\n        </select>\r\n        <div>\r\n            Selected value is : {this.state.selectValues}\r\n        </div>\r\n           \r\n        \r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\n","D:\\ReactPrescriptionForm\\src\\component\\PupilSelect.js",["74"],"import React, { Component } from 'react';\r\n\r\nexport class PupilSelect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n     values: [],\r\n      colours: {},\r\n      selectValues: \"\"\r\n    };\r\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\r\n  }\r\n  handleDropdownChange(e){\r\n    this.setState({ selectValues: e.target.value });\r\n}\r\n  componentDidMount() {\r\n    this.setState({\r\n     values: [\r\n       \r\n        {id: '63', name: '63 (Average/ Dont know)'},\r\n        {id: '55 ', name: ' 55'},\r\n        {id: ' 56', name: ' 56'},\r\n        {id: ' 57', name: '57 '},\r\n        {id: '58 ', name: ' 58'},\r\n        {id: '59 ', name: '59 '},\r\n        {id: '60 ', name: '60 '},\r\n        {id: ' 61', name: ' 61'},\r\n        {id: ' 62', name: '62 '},\r\n        {id: ' 64', name: ' 64'},\r\n        {id: '65 ', name: '65 '},\r\n        {id: ' 66', name: ' 66'},\r\n        {id: ' 67', name: '67 '},\r\n        {id: '68 ', name: '68 '},\r\n        {id: '69 ', name: ' 69'},\r\n        {id: ' 70', name: ' 70'},\r\n        {id: ' 71', name: '71 '},\r\n        {id: ' 72', name: ' 72'},\r\n        {id: ' 73', name: ' 73'},\r\n        {id: ' 74', name: ' 74'},\r\n        {id: ' 75', name: ' 75'},\r\n\r\n        \r\n        \r\n      ]\r\n    });\r\n  }\r\n\r\n\r\n  render () {\r\n    const { values } = this.state;\r\n\r\n    let valuesList = values.length > 0\r\n    \t&& values.map((item, i) => {\r\n      return (\r\n        <option key={i} value={item.id}>{item.name}</option>\r\n      )\r\n    }, this);\r\n\r\n    return (\r\n      <div>\r\n        <select onChange={this.handleDropdownChange}>\r\n          {valuesList}\r\n        </select>\r\n        <div>\r\n            Selected value is : {this.state.selectValues}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","D:\\ReactPrescriptionForm\\src\\component\\Simple.js",[],"D:\\ReactPrescriptionForm\\src\\component\\Advanced.js",[],"D:\\ReactPrescriptionForm\\src\\Menu.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":19},{"ruleId":"83","severity":1,"message":"84","line":16,"column":63,"nodeType":"85","endLine":16,"endColumn":75},{"ruleId":"79","severity":1,"message":"86","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"86","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"86","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]